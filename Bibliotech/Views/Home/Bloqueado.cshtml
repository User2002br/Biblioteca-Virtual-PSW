@using System.Security.Claims
@using Microsoft.AspNetCore.Antiforgery
@inject IAntiforgery Antiforgery
@{
    ViewData["Title"] = "Usuário Bloqueado";
    var usuario = User.Identity.IsAuthenticated ? User.Identity.Name : null;
    DateTime usuarioDataDesbloqueio = DateTime.Now;
    DateTime usuarioDataQuandoBloqueio = DateTime.Now; 
    string motivoBloqueio = "motivo desconhecido"; 
    var isPermanentlyBlocked = ViewBag.IsPermanentlyBlocked;

    if (User.Identity.IsAuthenticated)
    {
        var claimsIdentity = User.Identity as ClaimsIdentity;
        var dataDesbloqueioClaim = claimsIdentity?.FindFirst("DataDesbloqueio");
        if (dataDesbloqueioClaim != null)
        {
            usuarioDataDesbloqueio = DateTime.Parse(dataDesbloqueioClaim.Value);
        }
        var DataQuandoBloqueadoClaim = claimsIdentity?.FindFirst("DataQuandoBloqueado");
        if (DataQuandoBloqueadoClaim != null)
        {
            usuarioDataQuandoBloqueio = DateTime.Parse(DataQuandoBloqueadoClaim.Value);
        }
        var motivoBloqueioClaim = claimsIdentity?.FindFirst("MotivoBloqueio");
        if (motivoBloqueioClaim != null)
        {
            motivoBloqueio = motivoBloqueioClaim.Value;
        }
    }

    var usuarioBloqueado = User.FindFirst("Bloqueado")?.Value == "True";
    if (!usuarioBloqueado)
    {
        Context.Response.Redirect("/Home/Index");
    }

    var tempoRestante = (usuarioDataDesbloqueio - usuarioDataQuandoBloqueio).Add(TimeSpan.FromSeconds(3600));
    
    var semanasRestantes = (int)Math.Floor(tempoRestante.TotalDays / 7.0);
    var antiforgeryToken = Antiforgery.GetAndStoreTokens(Context).RequestToken;
    string userId = User.FindFirst("Id")?.Value;
}

<div class="text-left">
    <h1 class="display-4">Bloqueado por @(
        semanasRestantes > 0 ? $"{semanasRestantes} semanas" :
        tempoRestante.Days > 0 ? $"{tempoRestante.Days} dias" :
        $"{tempoRestante.Hours} horas")</h1>
    <p class="lead">Você foi temporariamente bloqueado por <strong>@motivoBloqueio</strong></p>
    <p>Você foi bloqueado em @usuarioDataQuandoBloqueio.ToString("dd/MM/yyyy HH:mm").</p>
    <p>Você será desbloqueado em @usuarioDataDesbloqueio.ToString("dd/MM/yyyy HH:mm").</p>
    <p>Caso você quebre as regras mais uma vez, o bloqueio será maior.</p>
</div>

<div class="text-center" style="margin-top: 150px;">
    <form method="post" onsubmit="event.preventDefault(); logoutAndRedirect();">
        <button type="submit" class="btn btn-danger">Deslogar</button>
    </form>
</div>

@if (DateTime.Now >= usuarioDataDesbloqueio)
{
    <div class="text-center mt-4">
        <form method="post" onsubmit="event.preventDefault(); confirmUnlock();">
            <div class="form-check d-flex align-items-center justify-content-center">
                <input type="checkbox" class="form-check-input" id="agreeCheckbox" style="background-color: gray; margin-right: 10px; vertical-align: middle;">
                <label class="form-check-label" for="agreeCheckbox" style="vertical-align: middle;">Concordo e desejo desbloquear meu usuário.</label>
            </div>
            <div class="mt-2">
                <button type="submit" class="btn btn-success">Confirmar</button>
            </div>
        </form>
    </div>
}

<div class="text-center mt-5">
    @if (isPermanentlyBlocked)
    {
        <h1 class="text-danger">Conta deletada.</h1>
    }
    else
    {
        <h1 class="text-warning">Sua conta está bloqueada.</h1>
        <p>Por favor, entre em contato com o suporte para mais informações.</p>
    }
</div>

@section Scripts {
    <script>
        const userId = '@userId';

        function logoutAndRedirect() {
            document.cookie.split(";").forEach(function(c) { 
                document.cookie = c.trim().split("=")[0] + '=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/'; 
            });
            window.location.href = '/Home/Index';
        }

        function confirmUnlock() {
            if (document.getElementById('agreeCheckbox').checked) {
                if (!userId) {
                    alert('ID do usuário não disponível.');
                    return;
                }
                fetch('/api/Usuarios/DesbloquearUsuarioById', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': '@antiforgeryToken'
                    },
                    body: JSON.stringify({ userId: parseInt(userId) }) 
                }).then(response => {
                    if (response.ok) {
                        setTimeout(() => {
                            window.location.href = '/Home/Index'; 
                        }, 1000);
                    } else {
                        alert('Erro ao desbloquear o usuário.');
                    }
                });
            } else {
                alert('Você deve concordar para desbloquear seu usuário.');
            }
        }
    </script>
}